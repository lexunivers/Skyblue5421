# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.jwtsecret: '%env(JWT_SECRET)%'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    admin.comptepilote:
        class: App\Admin\ComptepiloteAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Comptepilote, controller: ~, manager_type: orm, group: Comptabilité, label: Comptepilote }

    admin.avions:
        class: App\Admin\AvionsAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Avions, controller: App\Controller\AvionsController, manager_type: orm, group: Parc Avions, label: Avions }
        #public: true

    admin.resources:
        class: App\Admin\ResourcesAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Resources, manager_type: orm, group: Parc Avions, label: Resources }
        public: true
            
    admin.instructeur:
        class: App\Admin\InstructeurAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Instructeur, manager_type: orm, group: Formation,label: Instructeur }
  
    admin.terrain:
        class: App\Admin\TerrainAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Terrain, manager_type: orm, group: Divers,label: Terrain }

    #admin.compte_individuel:
    #    class: App\Admin\OperationComptableAdmin
    #    tags:
    #        - { name: sonata.admin, model_class: App\Entity\OperationComptable, controller: App\Controller\CpteIndividuelController, manager_type: orm, group: Cptes Individuels, label: Cpte Individuel }

    admin.operation_comptable:
        class: App\Admin\OperationComptableAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\OperationComptable, controller: App\Controller\OperationComptableController, manager_type: orm, group: Comptabilité, label: OperationComptable }
    admin.cotisation_club:
        class: App\Admin\CotisationClubAdmin
        arguments: [~, App\Entity\CotisationClub, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Comptabilité, label: Cotisation Club }
#        public: true

#    admin.ma_cotisation:
#        class: App\Admin\MaCotisationAdmin
#        arguments: [~, App\Entity\MaCotisation, App\Controller\MaCotisationAdminController]
#        tags:
#            - { name: sonata.admin, manager_type: orm, group: Comptabilité, label: Cotisation Individuelle }
#        public: true

#    admin.reserver:
#        class: App\Admin\ReserverAdmin
#        tags:
#            - { name: sonata.admin, model_class: App\Entity\Reserver, controller: App\Controller\ReserverAdminController, manager_type: orm, group: Reservation, label: Reserver }
#        #public: true

    admin.parametres:
        class: App\Admin\ParametresAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Parametres, controller: App\Controller\ParametresController, manager_type: orm, group: Parametres, label: Parametres }

    admin.cpte_individuel:
        class: App\Admin\CpteIndividuelAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\CpteIndividuel, controller: App\Controller\CpteIndividuelController, manager_type: orm, group: Consultation, label: Cptes Individuels }

    admin.statistiques:
        class: App\Admin\StatistiquesAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Statistiques, controller: App\Controller\StatistiquesController, manager_type: orm, group: Consultation, label: Statistiques }

    admin.vol:
        class: App\Admin\VolAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Vol, controller: App\Controller\VolController, manager_type: orm, group: Gestion des Vols, label: Saisir/Voir }

    admin.typevol:
        class: App\Admin\TypevolAdmin
        arguments: [~, App\Entity\Typevol, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Divers, label: Typevol }
    admin.naturevol:
        class: App\Admin\NaturevolAdmin
        arguments: [~, App\Entity\Naturevol, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Divers, label: Naturevol }

#    admin.reserver:
#        class: App\Admin\ReserverAdmin
#        tags:
#            - { name: sonata.admin, model_class: App\Entity\Reserver, controller: App\Controller\ReserverAdminController, manager_type: orm, group: Réservation, label: Réserver }

#    admin.reserver:
#        class: App\Admin\ReserverAdmin
#        tags:
#            - { name: sonata.admin, model_class: App\Entity\Reserver, controller: ~, manager_type: orm, group: Divers, label: Reserver }

    admin.reservation:
        class: App\Admin\ReservationAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Reservation, controller: App\Controller\ReservationAdminController, manager_type: orm, group: Gestion des Vols, label: Reservation }
